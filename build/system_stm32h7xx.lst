ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	SystemInit:
  25              	.LFB144:
  26              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Core/Src/system_stm32h7xx.c ****   *
  32:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 2


  33:Core/Src/system_stm32h7xx.c ****   */
  34:Core/Src/system_stm32h7xx.c **** 
  35:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32h7xx.c ****   * @{
  37:Core/Src/system_stm32h7xx.c ****   */
  38:Core/Src/system_stm32h7xx.c **** 
  39:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Core/Src/system_stm32h7xx.c ****   * @{
  41:Core/Src/system_stm32h7xx.c ****   */
  42:Core/Src/system_stm32h7xx.c **** 
  43:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Core/Src/system_stm32h7xx.c ****   * @{
  45:Core/Src/system_stm32h7xx.c ****   */
  46:Core/Src/system_stm32h7xx.c **** 
  47:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  50:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  51:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  52:Core/Src/system_stm32h7xx.c **** 
  53:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  54:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  55:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  56:Core/Src/system_stm32h7xx.c **** 
  57:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  58:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  59:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  60:Core/Src/system_stm32h7xx.c **** 
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** /**
  63:Core/Src/system_stm32h7xx.c ****   * @}
  64:Core/Src/system_stm32h7xx.c ****   */
  65:Core/Src/system_stm32h7xx.c **** 
  66:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  67:Core/Src/system_stm32h7xx.c ****   * @{
  68:Core/Src/system_stm32h7xx.c ****   */
  69:Core/Src/system_stm32h7xx.c **** 
  70:Core/Src/system_stm32h7xx.c **** /**
  71:Core/Src/system_stm32h7xx.c ****   * @}
  72:Core/Src/system_stm32h7xx.c ****   */
  73:Core/Src/system_stm32h7xx.c **** 
  74:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  75:Core/Src/system_stm32h7xx.c ****   * @{
  76:Core/Src/system_stm32h7xx.c ****   */
  77:Core/Src/system_stm32h7xx.c **** 
  78:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  80:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  81:Core/Src/system_stm32h7xx.c **** 
  82:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  83:Core/Src/system_stm32h7xx.c ****          configuration. */
  84:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  85:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  86:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  87:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  88:Core/Src/system_stm32h7xx.c **** 
  89:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 3


  90:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  91:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  92:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  93:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  94:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  95:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  96:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
  97:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  98:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
  99:Core/Src/system_stm32h7xx.c **** #else
 100:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 101:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 102:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 103:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 104:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 105:Core/Src/system_stm32h7xx.c **** #else
 106:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 107:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 108:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 109:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 110:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 111:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 112:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 113:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 114:Core/Src/system_stm32h7xx.c **** #else
 115:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 116:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 117:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 118:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 119:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 120:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 121:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 122:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 123:Core/Src/system_stm32h7xx.c **** 
 124:Core/Src/system_stm32h7xx.c **** /**
 125:Core/Src/system_stm32h7xx.c ****   * @}
 126:Core/Src/system_stm32h7xx.c ****   */
 127:Core/Src/system_stm32h7xx.c **** 
 128:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 129:Core/Src/system_stm32h7xx.c ****   * @{
 130:Core/Src/system_stm32h7xx.c ****   */
 131:Core/Src/system_stm32h7xx.c **** 
 132:Core/Src/system_stm32h7xx.c **** /**
 133:Core/Src/system_stm32h7xx.c ****   * @}
 134:Core/Src/system_stm32h7xx.c ****   */
 135:Core/Src/system_stm32h7xx.c **** 
 136:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 137:Core/Src/system_stm32h7xx.c ****   * @{
 138:Core/Src/system_stm32h7xx.c ****   */
 139:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 140:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 141:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 142:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 143:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 144:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 145:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 146:Core/Src/system_stm32h7xx.c ****   */
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 4


 147:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 148:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 149:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 150:Core/Src/system_stm32h7xx.c **** 
 151:Core/Src/system_stm32h7xx.c **** /**
 152:Core/Src/system_stm32h7xx.c ****   * @}
 153:Core/Src/system_stm32h7xx.c ****   */
 154:Core/Src/system_stm32h7xx.c **** 
 155:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 156:Core/Src/system_stm32h7xx.c ****   * @{
 157:Core/Src/system_stm32h7xx.c ****   */
 158:Core/Src/system_stm32h7xx.c **** 
 159:Core/Src/system_stm32h7xx.c **** /**
 160:Core/Src/system_stm32h7xx.c ****   * @}
 161:Core/Src/system_stm32h7xx.c ****   */
 162:Core/Src/system_stm32h7xx.c **** 
 163:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 164:Core/Src/system_stm32h7xx.c ****   * @{
 165:Core/Src/system_stm32h7xx.c ****   */
 166:Core/Src/system_stm32h7xx.c **** 
 167:Core/Src/system_stm32h7xx.c **** /**
 168:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 169:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 170:Core/Src/system_stm32h7xx.c ****   *         configuration.
 171:Core/Src/system_stm32h7xx.c ****   * @param  None
 172:Core/Src/system_stm32h7xx.c ****   * @retval None
 173:Core/Src/system_stm32h7xx.c ****   */
 174:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 175:Core/Src/system_stm32h7xx.c **** {
  27              		.loc 1 175 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 176:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 177:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 178:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 179:Core/Src/system_stm32h7xx.c **** 
 180:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 181:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 182:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  32              		.loc 1 182 0
  33 0000 274A     		ldr	r2, .L5
  34 0002 D2F88830 		ldr	r3, [r2, #136]
  35 0006 43F47003 		orr	r3, r3, #15728640
  36 000a C2F88830 		str	r3, [r2, #136]
 183:Core/Src/system_stm32h7xx.c ****   #endif
 184:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 185:Core/Src/system_stm32h7xx.c **** 
 186:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 187:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  37              		.loc 1 187 0
  38 000e 254B     		ldr	r3, .L5+4
  39 0010 1B68     		ldr	r3, [r3]
  40 0012 03F00F03 		and	r3, r3, #15
  41 0016 062B     		cmp	r3, #6
  42 0018 06D8     		bhi	.L2
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 5


 188:Core/Src/system_stm32h7xx.c ****   {
 189:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 190:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  43              		.loc 1 190 0
  44 001a 224A     		ldr	r2, .L5+4
  45 001c 1368     		ldr	r3, [r2]
  46 001e 23F00F03 		bic	r3, r3, #15
  47 0022 43F00703 		orr	r3, r3, #7
  48 0026 1360     		str	r3, [r2]
  49              	.L2:
 191:Core/Src/system_stm32h7xx.c ****   }
 192:Core/Src/system_stm32h7xx.c **** 
 193:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 194:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  50              		.loc 1 194 0
  51 0028 1F4B     		ldr	r3, .L5+8
  52 002a 1A68     		ldr	r2, [r3]
  53 002c 42F00102 		orr	r2, r2, #1
  54 0030 1A60     		str	r2, [r3]
 195:Core/Src/system_stm32h7xx.c **** 
 196:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 197:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  55              		.loc 1 197 0
  56 0032 0022     		movs	r2, #0
  57 0034 1A61     		str	r2, [r3, #16]
 198:Core/Src/system_stm32h7xx.c **** 
 199:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 200:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  58              		.loc 1 200 0
  59 0036 1968     		ldr	r1, [r3]
  60 0038 1C4A     		ldr	r2, .L5+12
  61 003a 0A40     		ands	r2, r2, r1
  62 003c 1A60     		str	r2, [r3]
 201:Core/Src/system_stm32h7xx.c ****   
 202:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 203:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  63              		.loc 1 203 0
  64 003e 194B     		ldr	r3, .L5+4
  65 0040 1B68     		ldr	r3, [r3]
  66 0042 03F00F03 		and	r3, r3, #15
  67 0046 072B     		cmp	r3, #7
  68 0048 06D9     		bls	.L3
 204:Core/Src/system_stm32h7xx.c ****   {
 205:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 206:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  69              		.loc 1 206 0
  70 004a 164A     		ldr	r2, .L5+4
  71 004c 1368     		ldr	r3, [r2]
  72 004e 23F00F03 		bic	r3, r3, #15
  73 0052 43F00703 		orr	r3, r3, #7
  74 0056 1360     		str	r3, [r2]
  75              	.L3:
 207:Core/Src/system_stm32h7xx.c ****   }
 208:Core/Src/system_stm32h7xx.c **** 
 209:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 210:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 211:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 6


  76              		.loc 1 211 0
  77 0058 134B     		ldr	r3, .L5+8
  78 005a 0022     		movs	r2, #0
  79 005c 9A61     		str	r2, [r3, #24]
 212:Core/Src/system_stm32h7xx.c **** 
 213:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 214:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  80              		.loc 1 214 0
  81 005e DA61     		str	r2, [r3, #28]
 215:Core/Src/system_stm32h7xx.c **** 
 216:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 217:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  82              		.loc 1 217 0
  83 0060 1A62     		str	r2, [r3, #32]
 218:Core/Src/system_stm32h7xx.c **** #else
 219:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 220:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 223:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 224:Core/Src/system_stm32h7xx.c **** 
 225:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 226:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 227:Core/Src/system_stm32h7xx.c **** #endif
 228:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 229:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  84              		.loc 1 229 0
  85 0062 1349     		ldr	r1, .L5+16
  86 0064 9962     		str	r1, [r3, #40]
 230:Core/Src/system_stm32h7xx.c **** 
 231:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 232:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  87              		.loc 1 232 0
  88 0066 1349     		ldr	r1, .L5+20
  89 0068 D962     		str	r1, [r3, #44]
 233:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 234:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
  90              		.loc 1 234 0
  91 006a 1349     		ldr	r1, .L5+24
  92 006c 1963     		str	r1, [r3, #48]
 235:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 236:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
  93              		.loc 1 236 0
  94 006e 5A63     		str	r2, [r3, #52]
 237:Core/Src/system_stm32h7xx.c **** 
 238:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 239:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
  95              		.loc 1 239 0
  96 0070 9963     		str	r1, [r3, #56]
 240:Core/Src/system_stm32h7xx.c **** 
 241:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 242:Core/Src/system_stm32h7xx.c **** 
 243:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
  97              		.loc 1 243 0
  98 0072 DA63     		str	r2, [r3, #60]
 244:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 245:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 7


  99              		.loc 1 245 0
 100 0074 1964     		str	r1, [r3, #64]
 246:Core/Src/system_stm32h7xx.c **** 
 247:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 248:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 101              		.loc 1 248 0
 102 0076 5A64     		str	r2, [r3, #68]
 249:Core/Src/system_stm32h7xx.c **** 
 250:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 251:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 103              		.loc 1 251 0
 104 0078 1968     		ldr	r1, [r3]
 105 007a 21F48021 		bic	r1, r1, #262144
 106 007e 1960     		str	r1, [r3]
 252:Core/Src/system_stm32h7xx.c **** 
 253:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 254:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 107              		.loc 1 254 0
 108 0080 1A66     		str	r2, [r3, #96]
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 257:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 258:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 109              		.loc 1 258 0
 110 0082 0E4B     		ldr	r3, .L5+28
 111 0084 1A68     		ldr	r2, [r3]
 112 0086 0E4B     		ldr	r3, .L5+32
 113 0088 1340     		ands	r3, r3, r2
 114 008a B3F1005F 		cmp	r3, #536870912
 115 008e 02D2     		bcs	.L4
 259:Core/Src/system_stm32h7xx.c ****   {
 260:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 261:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 262:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 116              		.loc 1 262 0
 117 0090 0122     		movs	r2, #1
 118 0092 0C4B     		ldr	r3, .L5+36
 119 0094 1A60     		str	r2, [r3]
 120              	.L4:
 263:Core/Src/system_stm32h7xx.c ****   }
 264:Core/Src/system_stm32h7xx.c **** #endif
 265:Core/Src/system_stm32h7xx.c **** 
 266:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 267:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 268:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 269:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 270:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 271:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 272:Core/Src/system_stm32h7xx.c **** #else
 273:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 274:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 275:Core/Src/system_stm32h7xx.c **** 
 276:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 277:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 278:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 279:Core/Src/system_stm32h7xx.c **** 
 280:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 8


 281:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 282:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 283:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 284:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 285:Core/Src/system_stm32h7xx.c **** 
 286:Core/Src/system_stm32h7xx.c **** #else
 287:Core/Src/system_stm32h7xx.c **** 
 288:Core/Src/system_stm32h7xx.c ****   /*
 289:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Core/Src/system_stm32h7xx.c ****    */
 293:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 121              		.loc 1 293 0
 122 0096 43F2D202 		movw	r2, #12498
 123 009a 0B4B     		ldr	r3, .L5+40
 124 009c 1A60     		str	r2, [r3]
 125 009e 7047     		bx	lr
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 00a0 00ED00E0 		.word	-536810240
 130 00a4 00200052 		.word	1375739904
 131 00a8 00440258 		.word	1476543488
 132 00ac 7FEDF6EA 		.word	-352916097
 133 00b0 00020202 		.word	33686016
 134 00b4 0000FF01 		.word	33488896
 135 00b8 80020101 		.word	16843392
 136 00bc 0010005C 		.word	1543507968
 137 00c0 0000FFFF 		.word	-65536
 138 00c4 08810051 		.word	1358987528
 139 00c8 00400052 		.word	1375748096
 140              		.cfi_endproc
 141              	.LFE144:
 143              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 144              		.align	1
 145              		.global	SystemCoreClockUpdate
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv5-d16
 151              	SystemCoreClockUpdate:
 152              	.LFB145:
 294:Core/Src/system_stm32h7xx.c **** 
 295:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Core/Src/system_stm32h7xx.c **** 
 300:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Core/Src/system_stm32h7xx.c **** 
 302:Core/Src/system_stm32h7xx.c **** }
 303:Core/Src/system_stm32h7xx.c **** 
 304:Core/Src/system_stm32h7xx.c **** /**
 305:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 306:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 307:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 9


 308:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 309:Core/Src/system_stm32h7xx.c ****   *
 310:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 311:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 312:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 313:Core/Src/system_stm32h7xx.c ****   *
 314:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 315:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 316:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 317:Core/Src/system_stm32h7xx.c ****   *
 318:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 319:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 320:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 321:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 322:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 323:Core/Src/system_stm32h7xx.c ****   *
 324:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 325:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 326:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 327:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 328:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 329:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 330:Core/Src/system_stm32h7xx.c ****   *
 331:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 332:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 333:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 334:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 335:Core/Src/system_stm32h7xx.c ****   *
 336:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 337:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 338:Core/Src/system_stm32h7xx.c ****   * @param  None
 339:Core/Src/system_stm32h7xx.c ****   * @retval None
 340:Core/Src/system_stm32h7xx.c ****   */
 341:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 342:Core/Src/system_stm32h7xx.c **** {
 153              		.loc 1 342 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 10B4     		push	{r4}
 159              	.LCFI0:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 4, -4
 343:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 344:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 345:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 346:Core/Src/system_stm32h7xx.c **** 
 347:Core/Src/system_stm32h7xx.c **** 
 348:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 349:Core/Src/system_stm32h7xx.c **** 
 350:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 162              		.loc 1 350 0
 163 0002 744B     		ldr	r3, .L22
 164 0004 1B69     		ldr	r3, [r3, #16]
 165 0006 03F03803 		and	r3, r3, #56
 166 000a 182B     		cmp	r3, #24
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 10


 167 000c 00F2C480 		bhi	.L8
 168 0010 DFE803F0 		tbb	[pc, r3]
 169              	.L10:
 170 0014 0F       		.byte	(.L9-.L10)/2
 171 0015 C2       		.byte	(.L8-.L10)/2
 172 0016 C2       		.byte	(.L8-.L10)/2
 173 0017 C2       		.byte	(.L8-.L10)/2
 174 0018 C2       		.byte	(.L8-.L10)/2
 175 0019 C2       		.byte	(.L8-.L10)/2
 176 001a C2       		.byte	(.L8-.L10)/2
 177 001b C2       		.byte	(.L8-.L10)/2
 178 001c 0D       		.byte	(.L11-.L10)/2
 179 001d C2       		.byte	(.L8-.L10)/2
 180 001e C2       		.byte	(.L8-.L10)/2
 181 001f C2       		.byte	(.L8-.L10)/2
 182 0020 C2       		.byte	(.L8-.L10)/2
 183 0021 C2       		.byte	(.L8-.L10)/2
 184 0022 C2       		.byte	(.L8-.L10)/2
 185 0023 C2       		.byte	(.L8-.L10)/2
 186 0024 C9       		.byte	(.L19-.L10)/2
 187 0025 C2       		.byte	(.L8-.L10)/2
 188 0026 C2       		.byte	(.L8-.L10)/2
 189 0027 C2       		.byte	(.L8-.L10)/2
 190 0028 C2       		.byte	(.L8-.L10)/2
 191 0029 C2       		.byte	(.L8-.L10)/2
 192 002a C2       		.byte	(.L8-.L10)/2
 193 002b C2       		.byte	(.L8-.L10)/2
 194 002c 16       		.byte	(.L13-.L10)/2
 195 002d 00       		.p2align 1
 196              	.L11:
 351:Core/Src/system_stm32h7xx.c ****   {
 352:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 353:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 354:Core/Src/system_stm32h7xx.c ****     break;
 355:Core/Src/system_stm32h7xx.c **** 
 356:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 357:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 197              		.loc 1 357 0
 198 002e 6A4A     		ldr	r2, .L22+4
 199 0030 BAE0     		b	.L12
 200              	.L9:
 353:Core/Src/system_stm32h7xx.c ****     break;
 201              		.loc 1 353 0
 202 0032 684B     		ldr	r3, .L22
 203 0034 1B68     		ldr	r3, [r3]
 204 0036 C3F3C103 		ubfx	r3, r3, #3, #2
 205 003a 684A     		ldr	r2, .L22+8
 206 003c DA40     		lsrs	r2, r2, r3
 207              	.LVL0:
 354:Core/Src/system_stm32h7xx.c **** 
 208              		.loc 1 354 0
 209 003e B3E0     		b	.L12
 210              	.LVL1:
 211              	.L13:
 358:Core/Src/system_stm32h7xx.c ****     break;
 359:Core/Src/system_stm32h7xx.c **** 
 360:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 11


 361:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 362:Core/Src/system_stm32h7xx.c ****     break;
 363:Core/Src/system_stm32h7xx.c **** 
 364:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 365:Core/Src/system_stm32h7xx.c **** 
 366:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 367:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 368:Core/Src/system_stm32h7xx.c ****     */
 369:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 212              		.loc 1 369 0
 213 0040 6449     		ldr	r1, .L22
 214 0042 886A     		ldr	r0, [r1, #40]
 215 0044 00F00300 		and	r0, r0, #3
 216              	.LVL2:
 370:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 217              		.loc 1 370 0
 218 0048 8A6A     		ldr	r2, [r1, #40]
 219 004a C2F30512 		ubfx	r2, r2, #4, #6
 220              	.LVL3:
 371:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 221              		.loc 1 371 0
 222 004e CC6A     		ldr	r4, [r1, #44]
 223 0050 04F00104 		and	r4, r4, #1
 224              	.LVL4:
 372:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 225              		.loc 1 372 0
 226 0054 4B6B     		ldr	r3, [r1, #52]
 227 0056 C3F3CC03 		ubfx	r3, r3, #3, #13
 228 005a 03FB04F3 		mul	r3, r3, r4
 229 005e 07EE903A 		vmov	s15, r3	@ int
 230 0062 F8EE677A 		vcvt.f32.u32	s15, s15
 231              	.LVL5:
 373:Core/Src/system_stm32h7xx.c **** 
 374:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 232              		.loc 1 374 0
 233 0066 002A     		cmp	r2, #0
 234 0068 00F09E80 		beq	.L12
 375:Core/Src/system_stm32h7xx.c ****     {
 376:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 235              		.loc 1 376 0
 236 006c 0128     		cmp	r0, #1
 237 006e 59D0     		beq	.L15
 238 0070 28B3     		cbz	r0, .L16
 239 0072 0228     		cmp	r0, #2
 240 0074 73D0     		beq	.L17
 377:Core/Src/system_stm32h7xx.c ****       {
 378:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 379:Core/Src/system_stm32h7xx.c **** 
 380:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 381:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 382:Core/Src/system_stm32h7xx.c **** 
 383:Core/Src/system_stm32h7xx.c ****         break;
 384:Core/Src/system_stm32h7xx.c **** 
 385:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 386:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 387:Core/Src/system_stm32h7xx.c ****         break;
 388:Core/Src/system_stm32h7xx.c **** 
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 12


 389:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 390:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 391:Core/Src/system_stm32h7xx.c ****         break;
 392:Core/Src/system_stm32h7xx.c **** 
 393:Core/Src/system_stm32h7xx.c ****       default:
 394:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 241              		.loc 1 394 0
 242 0076 5748     		ldr	r0, .L22
 243              	.LVL6:
 244 0078 0168     		ldr	r1, [r0]
 245 007a C1F3C101 		ubfx	r1, r1, #3, #2
 246 007e 574B     		ldr	r3, .L22+8
 247 0080 CB40     		lsrs	r3, r3, r1
 248              	.LVL7:
 395:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 249              		.loc 1 395 0
 250 0082 07EE103A 		vmov	s14, r3	@ int
 251 0086 F8EE476A 		vcvt.f32.u32	s13, s14
 252 008a 07EE102A 		vmov	s14, r2	@ int
 253 008e B8EE476A 		vcvt.f32.u32	s12, s14
 254 0092 86EE867A 		vdiv.f32	s14, s13, s12
 255 0096 036B     		ldr	r3, [r0, #48]
 256              	.LVL8:
 257 0098 C3F30803 		ubfx	r3, r3, #0, #9
 258 009c 06EE903A 		vmov	s13, r3	@ int
 259 00a0 F8EE666A 		vcvt.f32.u32	s13, s13
 260 00a4 9FED4E6A 		vldr.32	s12, .L22+12
 261 00a8 67EE867A 		vmul.f32	s15, s15, s12
 262              	.LVL9:
 263 00ac 76EEA77A 		vadd.f32	s15, s13, s15
 264 00b0 F7EE006A 		vmov.f32	s13, #1.0e+0
 265 00b4 77EEA67A 		vadd.f32	s15, s15, s13
 266 00b8 27EE277A 		vmul.f32	s14, s14, s15
 267              	.LVL10:
 396:Core/Src/system_stm32h7xx.c ****         break;
 268              		.loc 1 396 0
 269 00bc 22E0     		b	.L18
 270              	.LVL11:
 271              	.L16:
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 272              		.loc 1 380 0
 273 00be 4548     		ldr	r0, .L22
 274              	.LVL12:
 275 00c0 0168     		ldr	r1, [r0]
 276 00c2 C1F3C101 		ubfx	r1, r1, #3, #2
 277 00c6 454B     		ldr	r3, .L22+8
 278 00c8 CB40     		lsrs	r3, r3, r1
 279              	.LVL13:
 381:Core/Src/system_stm32h7xx.c **** 
 280              		.loc 1 381 0
 281 00ca 07EE103A 		vmov	s14, r3	@ int
 282 00ce F8EE476A 		vcvt.f32.u32	s13, s14
 283 00d2 07EE102A 		vmov	s14, r2	@ int
 284 00d6 B8EE476A 		vcvt.f32.u32	s12, s14
 285 00da 86EE867A 		vdiv.f32	s14, s13, s12
 286 00de 036B     		ldr	r3, [r0, #48]
 287              	.LVL14:
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 13


 288 00e0 C3F30803 		ubfx	r3, r3, #0, #9
 289 00e4 06EE903A 		vmov	s13, r3	@ int
 290 00e8 F8EE666A 		vcvt.f32.u32	s13, s13
 291 00ec 9FED3C6A 		vldr.32	s12, .L22+12
 292 00f0 67EE867A 		vmul.f32	s15, s15, s12
 293              	.LVL15:
 294 00f4 76EEA77A 		vadd.f32	s15, s13, s15
 295 00f8 F7EE006A 		vmov.f32	s13, #1.0e+0
 296 00fc 77EEA67A 		vadd.f32	s15, s15, s13
 297 0100 27EE277A 		vmul.f32	s14, s14, s15
 298              	.LVL16:
 299              	.L18:
 397:Core/Src/system_stm32h7xx.c ****       }
 398:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 300              		.loc 1 398 0
 301 0104 334B     		ldr	r3, .L22
 302 0106 1B6B     		ldr	r3, [r3, #48]
 303 0108 C3F34623 		ubfx	r3, r3, #9, #7
 304 010c 0133     		adds	r3, r3, #1
 305              	.LVL17:
 399:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 306              		.loc 1 399 0
 307 010e 07EE903A 		vmov	s15, r3	@ int
 308 0112 F8EE677A 		vcvt.f32.u32	s15, s15
 309 0116 C7EE276A 		vdiv.f32	s13, s14, s15
 310 011a FCEEE67A 		vcvt.u32.f32	s15, s13
 311 011e 17EE902A 		vmov	r2, s15	@ int
 312              	.LVL18:
 313 0122 41E0     		b	.L12
 314              	.LVL19:
 315              	.L15:
 386:Core/Src/system_stm32h7xx.c ****         break;
 316              		.loc 1 386 0
 317 0124 07EE102A 		vmov	s14, r2	@ int
 318 0128 F8EE476A 		vcvt.f32.u32	s13, s14
 319 012c 9FED2D6A 		vldr.32	s12, .L22+16
 320 0130 86EE267A 		vdiv.f32	s14, s12, s13
 321 0134 274B     		ldr	r3, .L22
 322 0136 1B6B     		ldr	r3, [r3, #48]
 323 0138 C3F30803 		ubfx	r3, r3, #0, #9
 324 013c 06EE903A 		vmov	s13, r3	@ int
 325 0140 F8EE666A 		vcvt.f32.u32	s13, s13
 326 0144 9FED266A 		vldr.32	s12, .L22+12
 327 0148 67EE867A 		vmul.f32	s15, s15, s12
 328              	.LVL20:
 329 014c 76EEA77A 		vadd.f32	s15, s13, s15
 330 0150 F7EE006A 		vmov.f32	s13, #1.0e+0
 331 0154 77EEA67A 		vadd.f32	s15, s15, s13
 332 0158 27EE277A 		vmul.f32	s14, s14, s15
 333              	.LVL21:
 387:Core/Src/system_stm32h7xx.c **** 
 334              		.loc 1 387 0
 335 015c D2E7     		b	.L18
 336              	.LVL22:
 337              	.L17:
 390:Core/Src/system_stm32h7xx.c ****         break;
 338              		.loc 1 390 0
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 14


 339 015e 07EE102A 		vmov	s14, r2	@ int
 340 0162 F8EE476A 		vcvt.f32.u32	s13, s14
 341 0166 9FED206A 		vldr.32	s12, .L22+20
 342 016a 86EE267A 		vdiv.f32	s14, s12, s13
 343 016e 194B     		ldr	r3, .L22
 344 0170 1B6B     		ldr	r3, [r3, #48]
 345 0172 C3F30803 		ubfx	r3, r3, #0, #9
 346 0176 06EE903A 		vmov	s13, r3	@ int
 347 017a F8EE666A 		vcvt.f32.u32	s13, s13
 348 017e 9FED186A 		vldr.32	s12, .L22+12
 349 0182 67EE867A 		vmul.f32	s15, s15, s12
 350              	.LVL23:
 351 0186 76EEA77A 		vadd.f32	s15, s13, s15
 352 018a F7EE006A 		vmov.f32	s13, #1.0e+0
 353 018e 77EEA67A 		vadd.f32	s15, s15, s13
 354 0192 27EE277A 		vmul.f32	s14, s14, s15
 355              	.LVL24:
 391:Core/Src/system_stm32h7xx.c **** 
 356              		.loc 1 391 0
 357 0196 B5E7     		b	.L18
 358              	.LVL25:
 359              	.L8:
 400:Core/Src/system_stm32h7xx.c ****     }
 401:Core/Src/system_stm32h7xx.c ****     else
 402:Core/Src/system_stm32h7xx.c ****     {
 403:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 404:Core/Src/system_stm32h7xx.c ****     }
 405:Core/Src/system_stm32h7xx.c ****     break;
 406:Core/Src/system_stm32h7xx.c **** 
 407:Core/Src/system_stm32h7xx.c ****   default:
 408:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 360              		.loc 1 408 0
 361 0198 0E4B     		ldr	r3, .L22
 362 019a 1B68     		ldr	r3, [r3]
 363 019c C3F3C103 		ubfx	r3, r3, #3, #2
 364 01a0 0E4A     		ldr	r2, .L22+8
 365 01a2 DA40     		lsrs	r2, r2, r3
 366              	.LVL26:
 409:Core/Src/system_stm32h7xx.c ****     break;
 367              		.loc 1 409 0
 368 01a4 00E0     		b	.L12
 369              	.LVL27:
 370              	.L19:
 361:Core/Src/system_stm32h7xx.c ****     break;
 371              		.loc 1 361 0
 372 01a6 114A     		ldr	r2, .L22+24
 373              	.L12:
 374              	.LVL28:
 410:Core/Src/system_stm32h7xx.c ****   }
 411:Core/Src/system_stm32h7xx.c **** 
 412:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 413:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 414:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 375              		.loc 1 414 0
 376 01a8 0A48     		ldr	r0, .L22
 377 01aa 8369     		ldr	r3, [r0, #24]
 378 01ac C3F30323 		ubfx	r3, r3, #8, #4
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 15


 379 01b0 0F49     		ldr	r1, .L22+28
 380 01b2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 381              	.LVL29:
 415:Core/Src/system_stm32h7xx.c **** 
 416:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 417:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 382              		.loc 1 417 0
 383 01b4 DA40     		lsrs	r2, r2, r3
 384              	.LVL30:
 418:Core/Src/system_stm32h7xx.c **** 
 419:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 420:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 385              		.loc 1 420 0
 386 01b6 8369     		ldr	r3, [r0, #24]
 387              	.LVL31:
 388 01b8 03F00F03 		and	r3, r3, #15
 389 01bc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 390 01be 03F01F03 		and	r3, r3, #31
 391 01c2 22FA03F3 		lsr	r3, r2, r3
 392 01c6 0B49     		ldr	r1, .L22+32
 393 01c8 0B60     		str	r3, [r1]
 421:Core/Src/system_stm32h7xx.c **** 
 422:Core/Src/system_stm32h7xx.c **** #else
 423:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 424:Core/Src/system_stm32h7xx.c **** 
 425:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 426:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 427:Core/Src/system_stm32h7xx.c **** 
 428:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 429:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 430:Core/Src/system_stm32h7xx.c **** 
 431:Core/Src/system_stm32h7xx.c **** #endif
 432:Core/Src/system_stm32h7xx.c **** 
 433:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 434:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 435:Core/Src/system_stm32h7xx.c **** #else
 436:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 394              		.loc 1 436 0
 395 01ca 0B4B     		ldr	r3, .L22+36
 396 01cc 1A60     		str	r2, [r3]
 437:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 438:Core/Src/system_stm32h7xx.c **** }
 397              		.loc 1 438 0
 398 01ce 5DF8044B 		ldr	r4, [sp], #4
 399              	.LCFI1:
 400              		.cfi_restore 4
 401              		.cfi_def_cfa_offset 0
 402 01d2 7047     		bx	lr
 403              	.L23:
 404              		.align	2
 405              	.L22:
 406 01d4 00440258 		.word	1476543488
 407 01d8 00093D00 		.word	4000000
 408 01dc 0090D003 		.word	64000000
 409 01e0 00000039 		.word	956301312
 410 01e4 0024744A 		.word	1249125376
 411 01e8 0024F44A 		.word	1257513984
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 16


 412 01ec 00127A00 		.word	8000000
 413 01f0 00000000 		.word	.LANCHOR0
 414 01f4 00000000 		.word	.LANCHOR1
 415 01f8 00000000 		.word	.LANCHOR2
 416              		.cfi_endproc
 417              	.LFE145:
 419              		.global	D1CorePrescTable
 420              		.global	SystemD2Clock
 421              		.global	SystemCoreClock
 422              		.section	.data.SystemCoreClock,"aw",%progbits
 423              		.align	2
 424              		.set	.LANCHOR2,. + 0
 427              	SystemCoreClock:
 428 0000 0090D003 		.word	64000000
 429              		.section	.data.SystemD2Clock,"aw",%progbits
 430              		.align	2
 431              		.set	.LANCHOR1,. + 0
 434              	SystemD2Clock:
 435 0000 0090D003 		.word	64000000
 436              		.section	.rodata.D1CorePrescTable,"a",%progbits
 437              		.align	2
 438              		.set	.LANCHOR0,. + 0
 441              	D1CorePrescTable:
 442 0000 00       		.byte	0
 443 0001 00       		.byte	0
 444 0002 00       		.byte	0
 445 0003 00       		.byte	0
 446 0004 01       		.byte	1
 447 0005 02       		.byte	2
 448 0006 03       		.byte	3
 449 0007 04       		.byte	4
 450 0008 01       		.byte	1
 451 0009 02       		.byte	2
 452 000a 03       		.byte	3
 453 000b 04       		.byte	4
 454 000c 06       		.byte	6
 455 000d 07       		.byte	7
 456 000e 08       		.byte	8
 457 000f 09       		.byte	9
 458              		.text
 459              	.Letext0:
 460              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 461              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 462              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 463              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 464              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 465              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 466              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 467              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 468              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 469              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 470              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 471              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 472              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 473              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:17     .text.SystemInit:00000000 $t
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:24     .text.SystemInit:00000000 SystemInit
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:129    .text.SystemInit:000000a0 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:144    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:151    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:170    .text.SystemCoreClockUpdate:00000014 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:406    .text.SystemCoreClockUpdate:000001d4 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:441    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:434    .data.SystemD2Clock:00000000 SystemD2Clock
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:427    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:423    .data.SystemCoreClock:00000000 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:430    .data.SystemD2Clock:00000000 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:437    .rodata.D1CorePrescTable:00000000 $d
                     .debug_frame:00000010 $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:195    .text.SystemCoreClockUpdate:0000002d $d
C:\Users\CompuTOP\AppData\Local\Temp\ccKSaAdQ.s:195    .text.SystemCoreClockUpdate:0000002e $t

NO UNDEFINED SYMBOLS
